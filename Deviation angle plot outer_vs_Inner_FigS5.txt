# This code was used for making the angle of deviation plot in figure S5O

# Load the required packages

library(readxl)
library(tidyverse)
library(dplyr)
library(writexl)
library(ggthemes)


file_path <- "C:\\Users\\askin\\OneDrive\\Documents\\Adrienne_Lab_Postdoc_Data\\vos3_paper_writing\\Supplementary codes and tables\\Data for plots\\Figure S3\\Combined_data_DeviationAngle.xlsx"

# Import data from Excel
data <- read_excel(file_path, sheet = "Sheet1")


# Prepare data for plotting
Celldeviationdata <- data %>%
  mutate(Genotype = factor(Genotype, levels = c("WT", "as2-7D")),
         Side = factor(Side, levels = c("Outer", "Inner")),
         Replicate = factor(Replicate))

# Define colors for genotypes
genotype_colors <- c("WT" = "black", "as2-7D" = "red")

# Calculating p value

# Function to format p-values as star annotations
p_to_star <- function(p){
  ifelse(p > 0.05, "ns",
         ifelse(p <= 0.05 & p > 0.001, "*",
                ifelse(p <= 0.001 & p > 0.0001, "**",
                       "***")))
} 

# Calculate p-values for comparison between sides for each genotype
genotype_p_values <- Celldeviationdata %>%
  split(.$Genotype) %>%
  lapply(function(df) {
    genotype_p_values <- pairwise.t.test(df$Deviation_Angle, df$Side, p.adjust.method = "bonferroni")$p.value
    star_annotations <- apply(genotype_p_values, c(1, 2), p_to_star)
    list(genotype_p_values = genotype_p_values, star_annotations = star_annotations)
    
  })
genotype_p_values_df <- as.data.frame(genotype_p_values)
  
# Calculate p-values for each side for WT vs as2-7D
Side_p_values <- Celldeviationdata %>%
  split(.$Side) %>%
  lapply(function(df) {
    Side_p_values <- pairwise.t.test(df$Deviation_Angle, df$Genotype, p.adjust.method = "bonferroni")$p.value
    star_annotations <- apply(Side_p_values, c(1, 2), p_to_star)
    list(Side_p_values = Side_p_values, star_annotations = star_annotations)
    
  })
Side_p_values_df <- as.data.frame(Side_p_values)

#print p values for comparison between sides for each genotype
print(genotype_p_values_df)
#print p values for comparison between genotypes for each side
print(Side_p_values_df)


# Calculate the mean, median, and standard deviation for the datasets
summary <- Celldeviationdata %>%
  group_by(Genotype, Side) %>%
  summarise(
    Mean = mean(Deviation_Angle, na.rm = TRUE),
    Median = median(Deviation_Angle, na.rm = TRUE),
    SD = sd(Deviation_Angle, na.rm = TRUE),
    .groups = 'drop'
  )

# Write the data to an Excel file
write_xlsx(summary, "Deviation_Angle_Summary.xlsx")

# Making the plots
plot <- ggplot(Celldeviationdata, aes(x = Genotype, y = Deviation_Angle, color = Genotype)) +
  geom_boxplot(outlier.shape = NA, alpha = 0.5, fill = NA) + 
  geom_jitter(size = 0.9, position = position_jitterdodge(dodge.width = 1)) +
  facet_wrap(~ Side, ncol = 2) +
  scale_color_manual(values = genotype_colors) +
  scale_y_continuous(breaks = seq(0, 90, by = 30)) +
  theme_minimal() +
  theme(plot.background = element_rect(fill = "white"),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        axis.line = element_line(colour = "black"),
        strip.background = element_rect(fill = "white", color = "black"),
        strip.text = element_text(face = "bold", size = 12),
        axis.title = element_text(size = 14, face = "bold"),
        axis.text = element_text(size = 12),
        legend.position = "none") +
  labs(x = "Side", y = "Deviation Angle")
# Save the plot as a high-quality PNG image
ggsave("Deviation_Angle_dotplot_abaxial_vs_adaxial.png", plot, width = 10, height = 6, dpi = 600)

# Display the plot in the R console
print(plot)

#Same plot without labels to put in the figure

plot <- ggplot(Celldeviationdata, aes(x = Genotype, y = Deviation_Angle, color = Genotype)) +
  geom_boxplot(outlier.shape = NA, alpha = 0.5, fill = NA) + 
  geom_jitter(size = 0.9, position = position_jitterdodge(dodge.width = 1)) +
  facet_wrap(~ Side, ncol = 2) +
  scale_color_manual(values = genotype_colors) +
   scale_y_continuous(breaks = seq(0, 90, by = 30)) +
  theme_minimal() + 
  theme(plot.background = element_rect(fill = "white", color = "white"),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        axis.line = element_line(colour = "black"),
        panel.border = element_blank(),
        strip.background = element_rect(fill = "white", color = "black"),
        strip.text = element_blank(),
        axis.title = element_blank(),
        axis.text.x = element_blank(),
        legend.position = "none")
  labs(x = NULL, y = NULL)
# Save the plot as a high-quality PNG image
ggsave("Deviation_Angle_dotplot_abaxial_vs_adaxial_without_labels.png", plot, width = 10, height = 6, dpi = 600)
print(plot)

